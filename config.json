{
    "PREPROCESSING": {
        "PATHS": {
            "rawTextData": ".data/raw/X_train.csv",
            "rawImageFolder": ".data/raw/images/",
            "rawLabels": ".data/raw/Y_train.csv",
            "cleanTextTrainData": ".data/clean/text_train.csv",
            "cleanTextTestData": ".data/clean/text_test.csv",
            "cleanImageTrainFolder": ".data/clean/image_train/",
            "cleanImageTestFolder": ".data/clean/image_test/",
            "cleanTrainLabels": ".data/clean/labels_train.csv",
            "cleanTestLabels": ".data/clean/labels_test.csv"
        },
        "PIPELINE": {
            "toPipe": "image",
            "sampleSize": 0,
            "trainSize": 0.8,
            "randomState": 42,
            "TEXTPIPELINE": {
                "CONSTANTS": {
                    "textualColumns": ["designation", "description"],
                    "alphanumCharacters": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                    "ponctuationCharacters": "!\"$%&'()+,-./:;?[]^_`|~ ",
                    "accentCharacters": "àâäçéèêëîïôöùûüÿœæÀÂÄÇÉÈÊËÎÏÔÖÙÛÜŸŒÆ",
                    "maxTokenVectorizer": 128,
                    "embeddingDimension": 384
                },
                "STEPS": [
                    {
                        "stepName": "character_cleaning",
                        "transformer": "CharacterCleaner",
                        "params": {}
                    },
                    {
                        "stepName": "text_embedding",
                        "transformer": "Vectorizer",
                        "params": {
                            "model": "paraphrase-multilingual-MiniLM-L12-v2"
                        }
                    },
                    {
                        "stepName": "knn_imputing",
                        "transformer": "CosineImputer",
                        "params": {
                            "n_neighbors": 5,
                            "excluded_cols": ["productid", "imageid", "description", "designation"]}
                    }
                ],
                "RESAMPLING": {
                    "active": false,
                    "params": {
                        "strategy": "equal",
                        "kNeighbors": 5,
                        "randomState": 5
                    }
                }
            },
            "IMAGEPIPELINE": {
                "CONSTANTS" : {
                    "imageShape": [500, 500, 3],
                    "enableCuda": true,
                    "numThreads": 8
                },
                "STEPS": [
                    {
                        "stepName": "rotation",
                        "transformer": "RandomImageRotation",
                        "params": {
                            "degree": 180,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "hflip",
                        "transformer": "RandomImageHFlip",
                        "params": {
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "vflip",
                        "transformer": "RandomImageVFlip",
                        "params": {
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "crop",
                        "transformer": "RandomImageCrop",
                        "params": {
                            "min_scale": 0.6,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "zoom",
                        "transformer": "RandomImageZoom",
                        "params": {
                            "min_scale": 0.8,
                            "max_scale": 1.2,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "blur",
                        "transformer": "RandomImageBlur",
                        "params": {
                            "max_kernel": 7,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "noise",
                        "transformer": "RandomImageNoise",
                        "params": {
                            "max_std": 0.1,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "contrast",
                        "transformer": "RandomImageContrast",
                        "params": {
                            "min_factor": 0.6,
                            "max_factor": 1.4,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "coloration",
                        "transformer": "RandomImageColoration",
                        "params": {
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "dropout",
                        "transformer": "RandomImageDropout",
                        "params": {
                            "min_area": 0.02,
                            "max_area": 0.15,
                            "p": 0.5
                        }
                    },
                    {
                        "stepName": "pixel_dropout",
                        "transformer": "RandomImagePixelDropout",
                        "params": {
                            "max_rate": 0.3,
                            "p": 0.5
                        }
                    }
                ]
            }
        }
    },
    "LOGS": {
        "filePath": ".logs/{DATE}_",
        "baseFormat": "%(asctime)s.%(msecs)03d [%(levelname)s] %(message)s",
        "dateFormat": "%Y-%m-%d %H:%M:%S"
    }
}
